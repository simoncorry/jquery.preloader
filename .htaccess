# ----------------------------------------------------------------------
# /// ALLOW SERVERSIDE INCLUDES ///
# ----------------------------------------------------------------------

Options +Includes
AddHandler server-parsed .shtml .html .htm
AddHandler php5-script .php


# ----------------------------------------------------------------------
# /// IE FORCED UPDATE AND CHROME FRAME ///
# ----------------------------------------------------------------------

# Force the latest IE version, in various cases when it may fall back to IE7 mode
#  github.com/rails/rails/commit/123eb25#commitcomment-118920
# Use ChromeFrame if it's installed for a better experience for the poor IE folk

<IfModule mod_headers.c>
  Header set X-UA-Compatible "IE=Edge,chrome=1"
  # mod_headers can't match by content-type, but we don't want to send this header on *everything*...
  <FilesMatch "\.(js|css|gif|png|jpe?g|pdf|xml|oga|ogg|m4a|ogv|mp4|m4v|webm|svg|svgz|eot|ttf|otf|woff|ico|webp|appcache|manifest|htc|crx|oex|xpi|safariextz|vcf)$" >
    Header unset X-UA-Compatible
  </FilesMatch>
</IfModule>


# ----------------------------------------------------------------------
# /// FIRE UP REWRITE ENGINE ///
# ----------------------------------------------------------------------

# Turning on the rewrite engine is necessary for the following rules and
# features. FollowSymLinks must be enabled for this to work.

# Some cloud hosting services require RewriteBase to be set: goo.gl/HOcPN
# If using the h5bp in a subdirectory, use `RewriteBase /foo` instead where
# 'foo' is your directory.

# If your web host doesn't allow the FollowSymlinks option, you may need to
# comment it out and use `Options +SymLinksIfOwnerMatch`, but be aware of the
# performance impact: http://goo.gl/Mluzd

<IfModule mod_rewrite.c>
  Options +FollowSymlinks
# Options +SymLinksIfOwnerMatch
  RewriteEngine On
  RewriteBase /
</IfModule>


# ----------------------------------------------------------------------
# /// SUPPRESS "www." AT THE BEGINNING OF URLS ///
# ----------------------------------------------------------------------

# Rewrite "www.example.com -> example.com".

<IfModule mod_rewrite.c>
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
  RewriteRule ^ http://%1%{REQUEST_URI} [R=301,L]
</IfModule>


# ----------------------------------------------------------------------
# /// REMOVE ".php" EXTENSIONS ///
# ----------------------------------------------------------------------

<IfModule mod_rewrite.c>

  # remove .php; use THE_REQUEST to prevent infinite loops
  RewriteCond %{THE_REQUEST} ^GET\ (.*)\.php\ HTTP
  RewriteRule (.*)\.php$ $1 [R=301]

  # remove index
  RewriteRule (.*)/index$ $1/ [R=301]

  # remove slash if not directory
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_URI} /$
  RewriteRule (.*)/ $1 [R=301]

  # add .php to access file, but don't redirect
  RewriteCond %{REQUEST_FILENAME}.php -f
  RewriteCond %{REQUEST_URI} !/$
  RewriteRule (.*) $1\.php [L]
  
</IfModule>


# ----------------------------------------------------------------------
# /// PREVENT 404 ERRORS FOR NON-EXISTING REDIRECTED FOLDERS ///
# ----------------------------------------------------------------------

# without -MultiViews, Apache will give a 404 for a rewrite if a folder of the
# same name does not exist.
# webmasterworld.com/apache/3808792.htm

Options -MultiViews


# ----------------------------------------------------------------------
# /// CUSTOM ERROR PAGES ///
# ----------------------------------------------------------------------

# If you are hosting your site in subdirectory, adjust this accordingly
# e.g. ErrorDocument 404 /subdir/404.html

ErrorDocument 404 /404.html

# ErrorDocument 400 /400.html
# ErrorDocument 401 /402.html
# ErrorDocument 403 /403.html
# ErrorDocument 404 /404.html
# ErrorDocument 408 /408.html
# ErrorDocument 500 /500.html


# ----------------------------------------------------------------------
# /// CUSTOM REDIRECTS ///
# ----------------------------------------------------------------------

# Folder to url
# Redirect permanent /folder_name/ http://url

# Url to url
# Redirect permanent http://url http://url


# ----------------------------------------------------------------------
# /// UTF-8 ENCODING ///
# ----------------------------------------------------------------------

# Use UTF-8 encoding for anything served text/plain or text/html
AddDefaultCharset utf-8

# Force UTF-8 for a number of file formats
AddCharset utf-8 .atom .css .js .json .rss .vtt .xml


# ----------------------------------------------------------------------
# /// ADDITIONAL SECURITY ///
# ----------------------------------------------------------------------

# To avoid displaying the exact version number of Apache being used, add the
# following to httpd.conf (it will not work in .htaccess):
# ServerTokens Prod

# "-Indexes" will have Apache block users from browsing folders without a
# default document Usually you should leave this activated, because you
# shouldn't allow everybody to surf through every folder on your server (which
# includes rather private places like CMS system folders).
<IfModule mod_autoindex.c>
  Options -Indexes
</IfModule>

# Block access to "hidden" directories or files whose names begin with a
# period. This includes directories used by version control systems such as
# Subversion or Git.
<IfModule mod_rewrite.c>
  RewriteCond %{SCRIPT_FILENAME} -d [OR]
  RewriteCond %{SCRIPT_FILENAME} -f
  RewriteRule "(^|/)\." - [F]
</IfModule>

# Block access to backup and source files. These files may be left by some
# text/html editors and pose a great security danger, when anyone can access
# them.
<FilesMatch "(\.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$">
  Order allow,deny
  Deny from all
  Satisfy All
</FilesMatch>

